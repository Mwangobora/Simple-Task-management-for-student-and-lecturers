{"ast":null,"code":"var _jsxFileName = \"/home/francis/Desktop/projects/Task ManagementSytem/client/src/Lecturers/lecturersDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Submissions from './submission';\nimport Tasks from './task';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LectureDashboard = ({\n  lecturerId\n}) => {\n  _s();\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSection, setCurrentSection] = useState('tasks'); // Track the current section\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks');\n      if (!response.ok) {\n        throw new Error('Failed to fetch tasks');\n      }\n      const data = await response.json();\n      setTasks(data);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  const handleSectionChange = section => {\n    setCurrentSection(section);\n    setSelectedTaskId(null); // Clear selected task when switching to tasks section\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-100 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-semibold mb-6\",\n      children: \"Lecturer Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSectionChange('tasks'),\n        className: `mr-4 py-2 px-4 rounded ${currentSection === 'tasks' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`,\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSectionChange('submissions'),\n        className: `py-2 px-4 rounded ${currentSection === 'submissions' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`,\n        children: \"Submissions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSectionChange('createTask'),\n        className: `py-2 px-4 rounded ${currentSection === 'createTask' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`,\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/sign-in\",\n        className: \"py-2 px-4 rounded bg-gray-200}\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), currentSection === 'tasks' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading tasks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-6\",\n        children: tasks && tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold\",\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setSelectedTaskId(task.id);\n              setCurrentSection('submissions'); // Switch to submissions when a task is selected\n            },\n            className: \"mt-3 bg-blue-500 text-white py-1 px-3 rounded hover:bg-blue-600\",\n            children: \"View Submissions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No tasks available. Please create a task.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), currentSection === 'createTask' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 bg-white p-6 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: \"Create a New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks,\n        onCreateTask: fetchTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), currentSection === 'submissions' && selectedTaskId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: /*#__PURE__*/_jsxDEV(Submissions, {\n        taskId: selectedTaskId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(LectureDashboard, \"IQ+CU9TM2M915tLyGuqIljBUgQ4=\");\n_c = LectureDashboard;\nexport default LectureDashboard;\nvar _c;\n$RefreshReg$(_c, \"LectureDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Submissions","Tasks","Link","jsxDEV","_jsxDEV","LectureDashboard","lecturerId","_s","selectedTaskId","setSelectedTaskId","tasks","setTasks","loading","setLoading","error","setError","currentSection","setCurrentSection","fetchTasks","response","fetch","ok","Error","data","json","err","message","handleSectionChange","section","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","length","map","task","title","description","id","onCreateTask","taskId","_c","$RefreshReg$"],"sources":["/home/francis/Desktop/projects/Task ManagementSytem/client/src/Lecturers/lecturersDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Submissions from './submission';\nimport Tasks from './task';\nimport { Link } from 'react-router-dom';\n\nconst LectureDashboard = ({ lecturerId }) => {\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSection, setCurrentSection] = useState('tasks'); // Track the current section\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks');\n      if (!response.ok) {\n        throw new Error('Failed to fetch tasks');\n      }\n      const data = await response.json();\n      setTasks(data);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  const handleSectionChange = (section) => {\n    setCurrentSection(section);\n    setSelectedTaskId(null); // Clear selected task when switching to tasks section\n  };\n\n  return (\n    <div className=\"p-6 bg-gray-100 min-h-screen\">\n      <h1 className=\"text-3xl font-semibold mb-6\">Lecturer Dashboard</h1>\n\n      {/* Navigation Bar */}\n      <div className=\"mb-6\">\n        <button\n          onClick={() => handleSectionChange('tasks')}\n          className={`mr-4 py-2 px-4 rounded ${currentSection === 'tasks' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\n        >\n          Tasks\n        </button>\n\n        <button\n          onClick={() => handleSectionChange('submissions')}\n          className={`py-2 px-4 rounded ${currentSection === 'submissions' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\n        >\n          Submissions\n        </button>\n\n        <button\n          onClick={() => handleSectionChange('createTask')}\n          className={`py-2 px-4 rounded ${currentSection === 'createTask' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\n        >\n          Create Task\n        </button>\n        <Link \n                to=\"/sign-in\" \n                className=\"py-2 px-4 rounded bg-gray-200}\"\n              >\n                Logout\n              </Link> \n      </div>\n\n      {currentSection === 'tasks' && (\n        <div>\n          {/* Loading and Error Handling */}\n          {loading && <p>Loading tasks...</p>}\n          {error && <p className=\"text-red-500\">{error}</p>}\n\n          {/* Task List */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-6\">\n            {tasks && tasks.length > 0 ? (\n              tasks.map((task) => (\n                <div key={task.id} className=\"bg-white p-4 rounded-lg shadow\">\n                  <h2 className=\"text-lg font-semibold\">{task.title}</h2>\n                  <p className=\"text-gray-600\">{task.description}</p>\n                  <button\n                    onClick={() => {\n                      setSelectedTaskId(task.id);\n                      setCurrentSection('submissions'); // Switch to submissions when a task is selected\n                    }}\n                    className=\"mt-3 bg-blue-500 text-white py-1 px-3 rounded hover:bg-blue-600\"\n                  >\n                    View Submissions\n                  </button>\n                </div>\n              ))\n            ) : (\n              <p>No tasks available. Please create a task.</p>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Display Task Creation Form when \"Create Task\" is Selected */}\n      {currentSection === 'createTask' && (\n        <div className=\"mt-8 bg-white p-6 rounded-lg shadow\">\n          <h2 className=\"text-2xl font-semibold mb-4\">Create a New Task</h2>\n          <Tasks tasks={tasks} onCreateTask={fetchTasks} /> {/* Pass the fetchTasks function to update task list */}\n        </div>\n      )}\n\n      {/* Display Submissions Only When \"Submissions\" is Selected and a Task is Selected */}\n      {currentSection === 'submissions' && selectedTaskId && (\n        <div className=\"mt-8\">\n          <Submissions taskId={selectedTaskId} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LectureDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}