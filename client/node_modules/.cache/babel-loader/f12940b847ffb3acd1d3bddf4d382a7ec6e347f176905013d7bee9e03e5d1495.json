{"ast":null,"code":"var _jsxFileName = \"/home/francis/Desktop/projects/Task ManagementSytem/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport LectureDashboard from './Lecturers/lecturersDashboard';\nimport StudentDashboard from './students/studentDashboard';\nimport RegisterForm from './components/userRegister';\nimport LoginForm from './components/usersLogin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userRole, setUserRole] = useState(null); // to store user role after login\n  const navigate = useNavigate(); // useNavigate hook should work inside functional components\n\n  useEffect(() => {\n    // If the user is already logged in, check their role (from localStorage or backend)\n    const storedRole = localStorage.getItem('userRole'); // or get from backend\n    if (storedRole) {\n      setUserRole(storedRole);\n      if (storedRole === 'lecturer') {\n        navigate('/lecturer-dashboard');\n      } else if (storedRole === 'student') {\n        navigate('/student-dashboard');\n      }\n    }\n  }, [navigate]); // Add navigate as a dependency to re-run when it changes\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LoginForm, {\n          setUserRole: setUserRole\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(RegisterForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/student-dashboard\",\n        element: /*#__PURE__*/_jsxDEV(StudentDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/lecturer-dashboard\",\n        element: /*#__PURE__*/_jsxDEV(LectureDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nbouIp3K4PIYHL/DB/wUQF0vl5g=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Routes","useNavigate","LectureDashboard","StudentDashboard","RegisterForm","LoginForm","jsxDEV","_jsxDEV","App","_s","userRole","setUserRole","navigate","storedRole","localStorage","getItem","Router","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/francis/Desktop/projects/Task ManagementSytem/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport LectureDashboard from './Lecturers/lecturersDashboard';\nimport StudentDashboard from './students/studentDashboard';\nimport RegisterForm from './components/userRegister';\nimport LoginForm from './components/usersLogin';\n\nfunction App() {\n  const [userRole, setUserRole] = useState(null); // to store user role after login\n  const navigate = useNavigate(); // useNavigate hook should work inside functional components\n\n  useEffect(() => {\n    // If the user is already logged in, check their role (from localStorage or backend)\n    const storedRole = localStorage.getItem('userRole'); // or get from backend\n    if (storedRole) {\n      setUserRole(storedRole);\n      if (storedRole === 'lecturer') {\n        navigate('/lecturer-dashboard');\n      } else if (storedRole === 'student') {\n        navigate('/student-dashboard');\n      }\n    }\n  }, [navigate]); // Add navigate as a dependency to re-run when it changes\n\n  return (\n    <Router>\n  <Routes>\n        <Route path=\"/\" element={<LoginForm setUserRole={setUserRole} />} />\n        <Route path=\"/register\" element={<RegisterForm />} />\n        <Route path=\"/student-dashboard\" element={<StudentDashboard />} />\n        <Route path=\"/lecturer-dashboard\" element={<LectureDashboard />} />\n      </Routes>\n    </Router>\n    \n    \n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,gBAAgB,MAAM,6BAA6B;AAC1D,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAMe,QAAQ,GAAGX,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCH,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;IACrD,IAAIF,UAAU,EAAE;MACdF,WAAW,CAACE,UAAU,CAAC;MACvB,IAAIA,UAAU,KAAK,UAAU,EAAE;QAC7BD,QAAQ,CAAC,qBAAqB,CAAC;MACjC,CAAC,MAAM,IAAIC,UAAU,KAAK,SAAS,EAAE;QACnCD,QAAQ,CAAC,oBAAoB,CAAC;MAChC;IACF;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,oBACEL,OAAA,CAACS,MAAM;IAAAC,QAAA,eACTV,OAAA,CAACP,MAAM;MAAAiB,QAAA,gBACDV,OAAA,CAACR,KAAK;QAACmB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEZ,OAAA,CAACF,SAAS;UAACM,WAAW,EAAEA;QAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpEhB,OAAA,CAACR,KAAK;QAACmB,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEZ,OAAA,CAACH,YAAY;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrDhB,OAAA,CAACR,KAAK;QAACmB,IAAI,EAAC,oBAAoB;QAACC,OAAO,eAAEZ,OAAA,CAACJ,gBAAgB;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClEhB,OAAA,CAACR,KAAK;QAACmB,IAAI,EAAC,qBAAqB;QAACC,OAAO,eAAEZ,OAAA,CAACL,gBAAgB;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAIb;AAACd,EAAA,CA7BQD,GAAG;EAAA,QAEOP,WAAW;AAAA;AAAAuB,EAAA,GAFrBhB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}