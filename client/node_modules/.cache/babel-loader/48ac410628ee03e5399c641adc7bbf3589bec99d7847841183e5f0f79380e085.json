{"ast":null,"code":"var _jsxFileName = \"/home/francis/Desktop/projects/Task ManagementSytem/client/src/Lecturers/submission.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Submissions = () => {\n  _s();\n  const [submissions, setSubmissions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch all submissions when the component mounts\n  useEffect(() => {\n    const fetchSubmissions = async () => {\n      console.log(\"Fetching all submissions...\"); // Debugging line\n\n      try {\n        const response = await fetch('http://localhost:5000/submissions'); // Fetch all submissions\n\n        // Check if the response is ok (status 200)\n        if (!response.ok) {\n          throw new Error('Failed to fetch submissions');\n        }\n        const data = await response.json();\n        console.log(\"Fetched data:\", data); // Debugging line\n\n        if (data && data.length > 0) {\n          setSubmissions(data);\n        } else {\n          setSubmissions([]);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchSubmissions();\n  }, []); // Empty dependency array to only fetch once when component mounts\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading submissions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  if (submissions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No submissions found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"All Submissions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: submissions.map(submission => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-gray-300 p-4 rounded-lg shadow hover:shadow-lg transition\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-medium text-lg\",\n          children: [\"Submitted By: \", submission.submitted_by]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", submission.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Submitted On: \", new Date(submission.submission_date).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `http://localhost:5000/${submission.file_path}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"text-blue-500 underline\",\n          children: \"View File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, submission.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n// Update submission status on the backend\n_s(Submissions, \"PJ/5jdK4TeLP7Fnn6NkaZhP8qWE=\");\n_c = Submissions;\nconst updateSubmissionStatus = async (submissionId, status) => {\n  try {\n    const response = await fetch(`http://localhost:5000/submissions/${submissionId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        status\n      })\n    });\n    if (!response.ok) {\n      const data = await response.json();\n      alert(data.error || 'Failed to update submission status');\n      return;\n    }\n\n    // Successfully updated status\n    alert('Submission status updated!');\n  } catch (error) {\n    console.error('Error updating submission status:', error);\n    alert('Error updating submission status');\n  }\n};\nexport default Submissions;\nvar _c;\n$RefreshReg$(_c, \"Submissions\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Submissions","_s","submissions","setSubmissions","loading","setLoading","error","setError","fetchSubmissions","console","log","response","fetch","ok","Error","data","json","length","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","submission","submitted_by","status","Date","submission_date","toLocaleString","href","file_path","target","rel","id","_c","updateSubmissionStatus","submissionId","method","headers","body","JSON","stringify","alert","$RefreshReg$"],"sources":["/home/francis/Desktop/projects/Task ManagementSytem/client/src/Lecturers/submission.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Submissions = () => {\n  const [submissions, setSubmissions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch all submissions when the component mounts\n  useEffect(() => {\n    const fetchSubmissions = async () => {\n      console.log(\"Fetching all submissions...\"); // Debugging line\n\n      try {\n        const response = await fetch('http://localhost:5000/submissions'); // Fetch all submissions\n\n        // Check if the response is ok (status 200)\n        if (!response.ok) {\n          throw new Error('Failed to fetch submissions');\n        }\n\n        const data = await response.json();\n        console.log(\"Fetched data:\", data); // Debugging line\n\n        if (data && data.length > 0) {\n          setSubmissions(data);\n        } else {\n          setSubmissions([]);\n        }\n\n        setLoading(false);\n      } catch (error) {\n        console.error('Error:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    fetchSubmissions();\n  }, []); // Empty dependency array to only fetch once when component mounts\n\n  if (loading) {\n    return <p>Loading submissions...</p>;\n  }\n\n  if (error) {\n    return <p className=\"text-red-500\">{error}</p>;\n  }\n\n  if (submissions.length === 0) {\n    return <p>No submissions found.</p>;\n  }\n\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-2xl font-semibold mb-4\">All Submissions</h1>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {submissions.map((submission) => (\n          <div\n            key={submission.id}\n            className=\"border border-gray-300 p-4 rounded-lg shadow hover:shadow-lg transition\"\n          >\n            <p className=\"font-medium text-lg\">Submitted By: {submission.submitted_by}</p>\n            <p>Status: {submission.status}</p>\n            <p>Submitted On: {new Date(submission.submission_date).toLocaleString()}</p>\n            <a\n              href={`http://localhost:5000/${submission.file_path}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-blue-500 underline\"\n            >\n              View File\n            </a>\n          \n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// Update submission status on the backend\nconst updateSubmissionStatus = async (submissionId, status) => {\n  try {\n    const response = await fetch(`http://localhost:5000/submissions/${submissionId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ status }),\n    });\n\n    if (!response.ok) {\n      const data = await response.json();\n      alert(data.error || 'Failed to update submission status');\n      return;\n    }\n\n    // Successfully updated status\n    alert('Submission status updated!');\n  } catch (error) {\n    console.error('Error updating submission status:', error);\n    alert('Error updating submission status');\n  }\n};\n\nexport default Submissions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}