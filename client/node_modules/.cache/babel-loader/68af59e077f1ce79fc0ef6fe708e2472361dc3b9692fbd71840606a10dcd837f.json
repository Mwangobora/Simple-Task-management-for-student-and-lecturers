{"ast":null,"code":"var _jsxFileName = \"/home/francis/Desktop/projects/Task ManagementSytem/client/src/Lecturers/lecturersDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Submissions from './submission';\nimport Tasks from './task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LectureDashboard = ({\n  lecturerId\n}) => {\n  _s();\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSection, setCurrentSection] = useState('tasks'); // Track the current section\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks');\n      if (!response.ok) {\n        throw new Error('Failed to fetch tasks');\n      }\n      const data = await response.json();\n      setTasks(data);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  const handleSectionChange = section => {\n    setCurrentSection(section);\n    setSelectedTaskId(null); // Clear selected task when switching to tasks section\n  };\n  const handleCreateTask = newTask => {\n    setTasks(prevTasks => [...prevTasks, newTask]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-100 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-semibold mb-6\",\n      children: \"Lecturer Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSectionChange('tasks'),\n        className: `mr-4 py-2 px-4 rounded ${currentSection === 'tasks' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`,\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSectionChange('submissions'),\n        className: `py-2 px-4 rounded ${currentSection === 'submissions' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`,\n        children: \"Submissions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), currentSection === 'tasks' && /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onCreateTask: handleCreateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), currentSection === 'submissions' && selectedTaskId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: /*#__PURE__*/_jsxDEV(Submissions, {\n        taskId: selectedTaskId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(LectureDashboard, \"IQ+CU9TM2M915tLyGuqIljBUgQ4=\");\n_c = LectureDashboard;\nexport default LectureDashboard;\nvar _c;\n$RefreshReg$(_c, \"LectureDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Submissions","Tasks","jsxDEV","_jsxDEV","LectureDashboard","lecturerId","_s","selectedTaskId","setSelectedTaskId","tasks","setTasks","loading","setLoading","error","setError","currentSection","setCurrentSection","fetchTasks","response","fetch","ok","Error","data","json","err","message","handleSectionChange","section","handleCreateTask","newTask","prevTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onCreateTask","taskId","_c","$RefreshReg$"],"sources":["/home/francis/Desktop/projects/Task ManagementSytem/client/src/Lecturers/lecturersDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Submissions from './submission';\nimport Tasks from './task';\n\nconst LectureDashboard = ({ lecturerId }) => {\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSection, setCurrentSection] = useState('tasks'); // Track the current section\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks');\n      if (!response.ok) {\n        throw new Error('Failed to fetch tasks');\n      }\n      const data = await response.json();\n      setTasks(data);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  const handleSectionChange = (section) => {\n    setCurrentSection(section);\n    setSelectedTaskId(null); // Clear selected task when switching to tasks section\n  };\n\n  const handleCreateTask = (newTask) => {\n    setTasks((prevTasks) => [...prevTasks, newTask]);\n  };\n\n  return (\n    <div className=\"p-6 bg-gray-100 min-h-screen\">\n      <h1 className=\"text-3xl font-semibold mb-6\">Lecturer Dashboard</h1>\n\n      {/* Navigation Bar */}\n      <div className=\"mb-6\">\n        <button\n          onClick={() => handleSectionChange('tasks')}\n          className={`mr-4 py-2 px-4 rounded ${currentSection === 'tasks' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\n        >\n          Tasks\n        </button>\n        \n        <button\n          onClick={() => handleSectionChange('submissions')}\n          className={`py-2 px-4 rounded ${currentSection === 'submissions' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\n        >\n          Submissions\n        </button>\n      </div>\n\n      {/* Display Task Management Component if \"Tasks\" is Selected */}\n      {currentSection === 'tasks' && (\n        <Tasks tasks={tasks} onCreateTask={handleCreateTask} />\n      )}\n\n      {/* Display Submissions Only When \"Submissions\" is Selected and a Task is Selected */}\n      {currentSection === 'submissions' && selectedTaskId && (\n        <div className=\"mt-8\">\n          <Submissions taskId={selectedTaskId} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LectureDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}