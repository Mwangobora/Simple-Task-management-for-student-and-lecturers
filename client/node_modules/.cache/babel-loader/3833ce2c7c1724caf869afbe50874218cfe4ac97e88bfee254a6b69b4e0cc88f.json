{"ast":null,"code":"var _jsxFileName = \"/home/francis/Desktop/projects/Task ManagementSytem/client/src/Lecturers/submission.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Submissions = ({\n  taskId\n}) => {\n  _s();\n  const [submissions, setSubmissions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Fetch submissions for a specific task\n  useEffect(() => {\n    const fetchSubmissions = async () => {\n      try {\n        setLoading(true); // Set loading to true when starting the request\n        const response = await fetch(`http://localhost:5000/submissions/${taskId}`, {\n          method: 'GET'\n        });\n\n        // Check if the response is OK (status code 200)\n        if (!response.ok) {\n          throw new Error('No submissions found for this task');\n        }\n\n        // Parse the response as JSON\n        const data = await response.json();\n        setSubmissions(data); // Update state with the fetched submissions\n        setLoading(false); // Set loading to false when request is complete\n      } catch (err) {\n        console.error('Error fetching submissions:', err);\n        setError('Failed to fetch submissions');\n        setLoading(false); // Set loading to false even if there is an error\n      }\n    };\n\n    // Ensure that taskId exists before making the API call\n    if (taskId) {\n      fetchSubmissions();\n    }\n  }, [taskId]); // Dependency array ensures this effect runs when taskId changes\n\n  // Function to handle submission status update\n  const updateSubmissionStatus = async (submissionId, status) => {\n    try {\n      const response = await fetch(`http://localhost:5000/submissions/${submissionId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          status\n        }) // Sending status in the body\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update submission status');\n      }\n\n      // Update local state after successful status update\n      setSubmissions(prevSubmissions => prevSubmissions.map(submission => submission.id === submissionId ? {\n        ...submission,\n        status\n      } : submission));\n    } catch (err) {\n      console.error('Error updating submission status:', err);\n      setError('Failed to update submission status');\n    }\n  };\n\n  // Handle rendering based on different states (loading, error, or submissions)\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading submissions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n  if (submissions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No submissions found for this task.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: [\"Submissions for Task ID: \", taskId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: submissions.map(submission => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-gray-300 p-4 rounded-lg shadow hover:shadow-lg transition\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-medium text-lg\",\n          children: [\"Submitted By: \", submission.submitted_by]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", submission.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `http://localhost:5000/${submission.file_path}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"text-blue-500 underline\",\n          children: \"View File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateSubmissionStatus(submission.id, 'approved'),\n            className: \"bg-green-500 text-white py-1 px-3 rounded hover:bg-green-600\",\n            children: \"Approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateSubmissionStatus(submission.id, 'rejected'),\n            className: \"bg-red-500 text-white py-1 px-3 rounded hover:bg-red-600 ml-2\",\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, submission.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Submissions, \"RfVkZ1e+kS+MORBpor8ZEFLhfLc=\");\n_c = Submissions;\nexport default Submissions;\nvar _c;\n$RefreshReg$(_c, \"Submissions\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Submissions","taskId","_s","submissions","setSubmissions","loading","setLoading","error","setError","fetchSubmissions","response","fetch","method","ok","Error","data","json","err","console","updateSubmissionStatus","submissionId","status","headers","body","JSON","stringify","prevSubmissions","map","submission","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","submitted_by","href","file_path","target","rel","onClick","_c","$RefreshReg$"],"sources":["/home/francis/Desktop/projects/Task ManagementSytem/client/src/Lecturers/submission.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Submissions = ({ taskId }) => {\n  const [submissions, setSubmissions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Fetch submissions for a specific task\n  useEffect(() => {\n    const fetchSubmissions = async () => {\n      try {\n        setLoading(true);  // Set loading to true when starting the request\n        const response = await fetch(`http://localhost:5000/submissions/${taskId}`,{\n            method:'GET'\n        });\n        \n        // Check if the response is OK (status code 200)\n        if (!response.ok) {\n          throw new Error('No submissions found for this task');\n        }\n\n        // Parse the response as JSON\n        const data = await response.json();\n        setSubmissions(data);  // Update state with the fetched submissions\n        setLoading(false);  // Set loading to false when request is complete\n      } catch (err) {\n        console.error('Error fetching submissions:', err);\n        setError('Failed to fetch submissions');\n        setLoading(false);  // Set loading to false even if there is an error\n      }\n    };\n\n    // Ensure that taskId exists before making the API call\n    if (taskId) {\n      fetchSubmissions();\n    }\n  }, [taskId]);  // Dependency array ensures this effect runs when taskId changes\n\n  // Function to handle submission status update\n  const updateSubmissionStatus = async (submissionId, status) => {\n    try {\n      const response = await fetch(`http://localhost:5000/submissions/${submissionId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ status }),  // Sending status in the body\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update submission status');\n      }\n\n      // Update local state after successful status update\n      setSubmissions((prevSubmissions) =>\n        prevSubmissions.map((submission) =>\n          submission.id === submissionId ? { ...submission, status } : submission\n        )\n      );\n    } catch (err) {\n      console.error('Error updating submission status:', err);\n      setError('Failed to update submission status');\n    }\n  };\n\n  // Handle rendering based on different states (loading, error, or submissions)\n  if (loading) {\n    return <p>Loading submissions...</p>;\n  }\n\n  if (error) {\n    return <p className=\"text-red-500\">{error}</p>;\n  }\n\n  if (submissions.length === 0) {\n    return <p>No submissions found for this task.</p>;\n  }\n\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-2xl font-semibold mb-4\">Submissions for Task ID: {taskId}</h1>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {submissions.map((submission) => (\n          <div\n            key={submission.id}\n            className=\"border border-gray-300 p-4 rounded-lg shadow hover:shadow-lg transition\"\n          >\n            <p className=\"font-medium text-lg\">Submitted By: {submission.submitted_by}</p>\n            <p>Status: {submission.status}</p>\n            <a\n              href={`http://localhost:5000/${submission.file_path}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-blue-500 underline\"\n            >\n              View File\n            </a>\n            <div className=\"mt-3\">\n              <button\n                onClick={() => updateSubmissionStatus(submission.id, 'approved')}\n                className=\"bg-green-500 text-white py-1 px-3 rounded hover:bg-green-600\"\n              >\n                Approve\n              </button>\n              <button\n                onClick={() => updateSubmissionStatus(submission.id, 'rejected')}\n                className=\"bg-red-500 text-white py-1 px-3 rounded hover:bg-red-600 ml-2\"\n              >\n                Reject\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Submissions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}